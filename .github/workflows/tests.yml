name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: kokokah_test
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
        coverage: xdebug

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer Dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate Application Key
      run: php artisan key:generate --env=testing

    - name: Create Test Database
      run: |
        mkdir -p database
        touch database/testing.sqlite

    - name: Run Migrations
      run: php artisan migrate --env=testing --database=sqlite

    - name: Run Unit Tests
      run: php artisan test tests/Unit --env=testing

    - name: Run Feature Tests
      run: php artisan test tests/Feature --env=testing

    - name: Run Integration Tests
      run: php artisan test tests/Integration --env=testing

    - name: Generate Code Coverage Report
      run: php artisan test --coverage --coverage-html=coverage --env=testing

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/index.html
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive Code Coverage Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        tools: phpstan, phpcs

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer Dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run PHPStan
      run: phpstan analyse app --level=5 --no-progress

    - name: Run PHP Code Sniffer
      run: phpcs app --standard=PSR12 --no-colors --report=json > phpcs-report.json || true

    - name: Archive Code Quality Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: code-quality-report
        path: phpcs-report.json

